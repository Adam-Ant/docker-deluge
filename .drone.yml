pipeline:
  build:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - docker build --no-cache --pull -t deluge-dev . 

  test:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - apk --no-cache add curl
      - mkdir -p config
      - echo "username:password:10" > config/auth
      - CON_NAME=$(docker run --rm -d -v $(pwd)/config:/config deluge-dev)
      - timeout -t 12 -- docker logs -f $$CON_NAME | cat &
      - sleep 5
      - IP=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $$CON_NAME)
      - if [ -z "$IP" ]; then
            echo "The container exited.. sadpanda";
            docker inspect --format='{{.State.ExitCode}}' $$CON_NAME;
            exit 25;
        fi
      - curl -sSL --max-time 3 --retry 5 --retry-delay 5 --retry-connrefused $IP:8112 > /dev/null # Test webserver
      - docker exec $$CON_NAME deluge-console 'connect localhost username password' # Test deluged
      - docker kill $$CON_NAME # Not really needed, but keeps things quick

  publish:
    image: docker
    secrets: [ DOCKER_USER, DOCKER_PASS ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: [push, tag, deployment]
    commands:
      - echo $DOCKER_USER
      - export CURVER=$(docker run --rm alpine sh -c 'echo http://dl-4.alpinelinux.org/alpine/edge/testing/ > /etc/apk/repositories && apk --no-cache -x search deluge' | sed -n 's/deluge-//p')
      - docker tag deluge-dev adamant/deluge:latest
      - docker tag deluge-dev adamant/deluge:$CURVER
      - docker login -u $DOCKER_USER -p $DOCKER_PASS
      - docker push adamant/deluge
      - docker rmi deluge-dev adamant/deluge
      - echo "CONGRATS! SUCCESSFULLY BUILT DELUGE"
